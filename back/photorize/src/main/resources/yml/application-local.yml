server:
  port: 8080

spring:
  config:
    activate:
      on-profile: local

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${DB_URL}
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.MySQLDialect
  cloud:
    aws:
      credentials:
        access-key: ${S3_ACCESS_KEY}
        secret-key: ${S3_SECRET_KEY}
      region:
        static: ap-northeast-2
      s3:
        bucket: ${S3_BUCKET_NAME}
      base-url: ${S3_BASE_URL}
    s3:
      presigned-url:
        expiration-minutes: ${S3_PRESIGNED_EXPIRATION:10} # 기본값 10분
  servlet:
    multipart:
      max-file-size: 500MB
      max-request-size: 500MB
  jwt:
    secret: ${JWT_SECRET}
    expire:
      time:
        access: ${JWT_ACCESS_TIME}
        refresh: ${JWT_REFRESH_TIME}
  fcm:
    certification-path: ${FCM_CERTIFICATION_FILE_PATH}
  data:
    redis:
      host: ${REDIS_HOST}
      port: 6379

    elasticsearch:
      uris: ${ELASTICSEARCH_URL}
      username: ${ELASTICSEARCH_USERNAME}
      password: ${ELASTICSEARCH_PASSWORD}

  security:
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${CLIENT_ID}  # REST API 키
            client-secret: ${CLIENT_SECRET} # Client Secret
            client-authentication-method: client_secret_post
            redirect-uri: https://photorize.co.kr/oauth2/login/code/kakao  # Redirect_URI
            authorization-grant-type: authorization_code
            client-name: kakao
            scope:
              - account_email
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: kakao_account


logging:
  level:
    root: INFO
    com:
      shutter:
        photorize: DEBUG
